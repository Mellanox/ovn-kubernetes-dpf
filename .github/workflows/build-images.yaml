name: Build Multi-Arch Container Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_UBUNTU: ${{ github.repository }}
  IMAGE_NAME_FEDORA: ${{ github.repository }}-fedora

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Determine tag
        id: tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          else
            TAG=v25.7.1-${GITHUB_SHA::7}
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (labels only)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_UBUNTU }}
      
      - name: Build and push Ubuntu image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ovn-kubernetes.ubuntu
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_UBUNTU }}:${{ steps.tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OVN_KUBERNETES_DIR=ovn-kubernetes
            BUILDER_IMAGE=quay.io/projectquay/golang:1.24
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-fedora:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Determine tag
        id: tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          else
            TAG=v25.7.1-${GITHUB_SHA::7}
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (labels only)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FEDORA }}
      
      - name: Build and push Fedora image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ovn-kubernetes.fedora
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FEDORA }}:${{ steps.tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OVN_KUBERNETES_DIR=ovn-kubernetes
            BUILDER_IMAGE=quay.io/projectquay/golang:1.24
          cache-from: type=gha
          cache-to: type=gha,mode=max

